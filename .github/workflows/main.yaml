name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  IMAGE: todo
  SERVICE: dwk-environments
  BRANCH: ${{ github.ref_name }}
  SOPS_AGE_KEY: ${{ secrets.AGE_KEY }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'
      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2
      - name: 'Use gcloud CLI'
        run: gcloud info
      - run: gcloud --quiet auth configure-docker
      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'
      - name: Build
        run: |
          docker build ./todo_application/todo-app/  --tag "gcr.io/$PROJECT_ID/$IMAGE-application:$BRANCH-$GITHUB_SHA"
          docker build ./todo_application/todo-backend/  --tag "gcr.io/$PROJECT_ID/$IMAGE-backend:$BRANCH-$GITHUB_SHA"
      - name: Publish
        run: |
          docker push "gcr.io/$PROJECT_ID/$IMAGE-application:$BRANCH-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/$IMAGE-backend:$BRANCH-$GITHUB_SHA"
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0
      - name: Setup SOPS
        uses: nhedger/setup-sops@v2
      - name: Decrypt secret
        run: sops --decrypt ./todo_application/manifests/secret.enc.yaml > ./todo_application/manifests/secret.yaml
      - name: Deploy
        run: |-
          cd todo_application
          namespace=${GITHUB_REF#refs/heads/}
          if [[ "$namespace" == "main" ]]; then
            namespace="default"
          fi
          kubectl create namespace $namespace || true
          kubectl config set-context --current --namespace=$namespace
          kubectl apply -f ./manifests/secret.yaml
          kustomize edit set namespace $namespace
          kustomize edit set image PROJECT/IMAGE-APPLICATION=gcr.io/$PROJECT_ID/$IMAGE-application:$BRANCH-$GITHUB_SHA
          kustomize edit set image PROJECT/IMAGE-BACKEND=gcr.io/$PROJECT_ID/$IMAGE-backend:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment todo-application-dep
          kubectl rollout status deployment todo-backend-dep
          kubectl get services -o wide
